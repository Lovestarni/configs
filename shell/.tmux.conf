# ------------------------------------------------------------------------
# default settings
# utf8 is on
# set -g utf8 on
# set -g status-utf8 on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# set only on OS X where it's required
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# upgrade $TERM
set -g default-terminal "screen-256color"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
# ------------------------------------------------------------------------


# ------------------------------------------------------------------------
# key-bindings
# easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

# source .tmux.conf as suggested in `man tmux`
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

# other some usefule operations
bind -r e lastp # 选择最后一个面板
bind -r ^e last # 选择最后一个窗口

# turn on the mouse support, version above 2.1
set-option -g mouse on # 等同于以上4个指令的效果

# if prefix is 'C-a'
# bind C-a send-prefix
bind a last-window
# ------------------------------------------------------------------------

# ------------------------------------------------------------------------
# Tmux plugin for copying to system clipboard.
# 复制模式配置
# 需要xclip支持
# 更改复制模式的默认行为为熟悉的vi风格
# tmux中复制模式通常使用复制模式的步骤如下:
#   1. 输入 <[>      进入复制模式
#   2. 按下 <空格键> 开始复制，移动光标选择复制区域
#   3. 按下 <回车键> 复制选中文本并退出复制模式
#   4. 按下 <]>      粘贴文本
# 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键
setw -g mode-keys vi

# 存在于tmux进程中的buffer缓存，虽然可以在会话间共享，但不能直接与系统粘贴板共享，不免有些遗憾
# 我们都知道，Mac自带pbcopy和pbpaste命令，分别用于复制和粘贴，但在tmux命令中它们却不能正常运行
# 我们可以使用一个包装程序reattach-to-user-namespace来重新连接到合适的命名空间，然后执行访问用户级命名空间的粘贴板服务

# 加载复制插件
#   1. 将命令行文本复制到剪贴板          <prefix+y>
#   2. 将当前面板的工作目录复制到剪贴板  <prefix+Y>
set -g @plugin 'tmux-plugins/tmux-yank'

# 配置开启剪贴板功能
set -g set-clipboard on
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"
# ------------------------------------------------------------------------

# ------------------------------------------------------------------------
# Persists tmux environment across system restarts.
# tmux保存会话依赖于tmux进程，因此关机重启后会话将被清空
# 目前有resurrect和continuum两个插件可以持久保存用户会话

# 无须任何配置就能够备份tmux会话中的各种细节，包括窗口、面板的顺序、布局、工作目录，运行程序等等数据
#   1. 保存的快捷键: <prefix + Ctrl-s>  tmux状态栏在保存开始
#   2. 恢复的快捷键: <prefix + Ctrl-r>  tmux状态栏在恢复开始
# 保存时，tmux会话的详细信息会以文本文件的格式保存到~/.tmux/resurrect目录，恢复时则从此处读取
# 由于数据文件是明文的，因此你完全可以自由管理或者编辑这些会话状态文件，如果备份频繁记得定期清除历史备份
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# 重载vim/neovim会话
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
# ------------------------------------------------------------------------

# ------------------------------------------------------------------------
# A plugin that enhances tmux search.
# 其中copycat搜索插件支持正则表达式搜索/搜索结果高亮/预定义搜索
# 正则格式搜索: <prefix+/>
# 搜索结果高亮: 使用grep命令搜索且搜索不区分大小写
# 预定义的搜索:
#   1. 文件搜索    <prefix+ctrl-f>
#   2. URL搜索     <prefix+ctrl-u>
#   3. 数字搜索    <prefix+ctrl-d>
#   4. IP地址搜索  <prefix+alt-i>
# 当然可以使用n/N进行高亮选择进行一个个的跳转
set -g @plugin 'tmux-plugins/tmux-copycat'
# ------------------------------------------------------------------------

# ------------------------------------------------------------------------
# Tmux plugin for controlling panes. Adds standard pane navigation bindings.
# Add plugin to the list of TPM plugins in .tmux.conf
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Hit prefix + I to fetch the plugin and source it
# You should now have all pain-control bindings defined.
# ------------------------------------------------------------------------

# ------------------------------------------------------------------------
# 插件的安装/更新/卸载
# install:<prefix+I> update:<prefix+U> remove:<prefix+alt+u>
set -g @plugin 'tmux-plugins/tpm'

# 抽出屏幕中的URL链接信息
# 在面板中显示所有URL链接地址: <prefix+p>
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @urlview-key 'p'

# 文件目录树
# 切换到侧栏的目录树: <prefix+Tab>
# 光标移动到侧边栏上: <prefix+Backspace>
set -g @plugin 'tmux-plugins/tmux-sidebar'

# 在右侧状态栏中展示电池和CPU信息和gpu信息
# cpu extension plugin
set -g @plugin 'tmux-plugins/tmux-cpu'
# gpu extension plugin
set -g @plugin 'danijoo/tmux-plugin-simple-gpu'
# cell extension plugin
# set -g @plugin 'tmux-plugins/tmux-battery'
# show tmux prefix highlight
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# 其他有用的插件(默认未启用)
#   1.方便进行面板切换
#     set -g @plugin 'tmux-plugins/tmux-pain-control'
#     set-option -g @pane_resize "5"
#   2.记录窗口信息输出
#     set -g @plugin 'tmux-plugins/tmux-logging'
#   3.文件差异比较
#     set -g @plugin 'jbnicolai/tmux-fpp'
#   4.用于快速打开突出显示的文件或URL
#     set -g @plugin 'tmux-plugins/tmux-open'
#   5.显示网卡网速插件
#     set -g @net_speed_interfaces "eth0 eth1"

# keep this line at the very bottom of tmux.conf
run '~/.tmux/plugins/tpm/tpm'